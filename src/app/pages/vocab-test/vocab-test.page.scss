.test-order {
    display: grid;
    width: 100%;
    grid-template-columns: 1fr 1fr 1fr;
    text-align: center;
}

.test-order-symbol {
    align-self: center;
}

.training-container {
    max-width: 500px;
    margin: auto;
}

.training-card {

}

.voc-input {
    --color: black;

    &:not([aria-disabled=true]) {
        border-bottom: solid 0.5px rgb(83, 83, 83);
    }

    ::ng-deep{
        .native-input[disabled].sc-ion-input-md {
            opacity: 1;
        }
    }
}

.language-word {
    opacity: 0.5;
}

.voc-word-input {
    font-size: 25px;
}

.correct-word {
    font-size: 25px;
    margin: 0 0 0 8px;
    position: absolute;
}

.voc-pron-input {
    font-size: 16px;
    //text-align: right;
}

.voc-trans-input {
    font-size: 25px;
}

.correct-translation {
    font-size: 25px;
    margin: 0 0 0 8px;
    position: absolute;
}

.voc-desc-input {
    font-size: 16px;
}

.start-center-button {
    position: relative;
    width: 200px;
    margin: auto;
    text-align: center;
    font-size: 25px;
    height: 200px;
    background: #ebebeb;
    border-radius: 100%;
    overflow: hidden;
    margin-top: 20%;
    vertical-align: middle;
    box-shadow: rgb(0 0 0 / 20%) 0px 3px 1px -2px, rgb(0 0 0 / 14%) 0px 2px 2px 0px, rgb(0 0 0 / 12%) 0px 1px 5px 0px;
    p {
        margin: 0;
        margin-top: calc(50% - 16px);
    }
}

.hideCheck {
    color: rgb(196, 196, 196);
    .correct-translation {
        color: black;
    }
    .correct-word {
        color: black;
    }
}

.visibilityHide {
    opacity: 0.3;
    filter: blur(4px);
    transition: filter 0.2s ease, opacity 0.2s ease;
    &:hover{
        opacity: 1;
        filter: none;
    }
}

.correct-row {
    display: grid;
    width: 100%;
    background-color: red;
    min-height: 5px;
    opacity: 0.4;
    .correct-row-success {
        height: 5px;
        background-color: green;
        border-right: solid 1px var(--background);
    }
}